{"version":3,"sources":["components/LocationList.js","components/SearchBar.js","components/WeatherCard.js","App.js","reportWebVitals.js","index.js"],"names":["LocationList","value","onClick","className","id","kota","SearchBar","locations","onLocationChange","useState","textInput","setTextInput","locationList","setLocationList","clearAndSubmitLocation","currentLocation","filter","location","match","length","class","type","placeholder","onChange","e","filteredLocation","toLowerCase","filterList","target","map","list","WeatherCard","weather","style","fontSize","opacity","jamCuaca","substring","cuaca","replace","tempC","humidity","App","setWeatherList","APIEndpoint","useEffect","a","getLocation","res","getLocationlist","fetch","json","data","getWeather","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08d28913.chunk.js","sourcesContent":["const LocationList = ({ value, onClick }) => {\r\n    return (\r\n        <div className='result-list' onClick={() => onClick(value.id)}>\r\n            <p>{value.kota}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationList;\r\n","import { MdPlace } from 'react-icons/md';\r\nimport { useState } from 'react';\r\nimport LocationList from './LocationList';\r\n\r\nconst SearchBar = ({ locations, onLocationChange }) => {\r\n    const [textInput, setTextInput] = useState('');\r\n    const [locationList, setLocationList] = useState([]);\r\n\r\n    const filterList = (value) => {\r\n        setTextInput(value);\r\n\r\n        if (value.length > 3) {\r\n            const filteredLocation = locations.filter((location) => \r\n                location.kota.toLowerCase().match(value)\r\n            );\r\n            setLocationList(filteredLocation);\r\n        } else {\r\n            setLocationList([]);\r\n        }\r\n    }\r\n\r\n    const clearAndSubmitLocation = (id) => {\r\n        const currentLocation = locations.filter((location) => \r\n            location.id.match(id)\r\n        );\r\n\r\n        setLocationList([]);\r\n        setTextInput(currentLocation[0].kota);\r\n        onLocationChange(id);\r\n    }\r\n\r\n    return (\r\n        <div className='search'>\r\n            <div className='search-bar'>\r\n                {textInput.length > 0 && <div class='pre-btn'><MdPlace /></div>}\r\n                <input type=\"text\" value={textInput} placeholder='Pencarian...' className={`input-text ${textInput.length === 0 && 'padding'} `} onChange={(e) => filterList(e.target.value)} />\r\n                {/* <button type=\"submit\" className='gps-btn'><MdMyLocation /></button> */}\r\n            </div>\r\n\r\n            {locationList.length > 0 &&\r\n                <div className={`result-popup ${locationList.length > 0 && 'show'}`}>\r\n                    {locationList.map((list) => (<LocationList key={list.id} value={list} onClick={clearAndSubmitLocation} />))}\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","const WeatherCard = ({ weather }) => {\r\n    return (\r\n        <>\r\n        {weather.map((value) => (\r\n            <div className='weather-card' key={value.id}>\r\n                <p>\r\n                    <p style={{fontSize: 11, opacity: 0.7}}>{value.jamCuaca.substring(0, 10)}</p>\r\n                    {value.jamCuaca.substring(10, 16)}\r\n                </p>\r\n                <div className={`weather-icon ${value.cuaca.toLowerCase().replace(' ', '-')}`}></div>\r\n                <p>\r\n                    <b>{value.cuaca}</b><br />\r\n                    {value.tempC}&#xb0;C {value.humidity}%\r\n                </p>\r\n            </div>\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherCard;","import { useState, useEffect } from 'react';\r\nimport SearchBar from './components/SearchBar';\r\nimport WeatherCard from './components/WeatherCard';\r\n\r\nfunction App() {\r\n  const [locationList, setLocationList] = useState('');\r\n  const [weather, setWeatherList] = useState([]);\r\n  const APIEndpoint = 'https://ibnux.github.io/BMKG-importer/cuaca/';\r\n\r\n  useEffect(() => {\r\n    const getLocationlist = async () => {\r\n      const res = await getLocation();\r\n      setLocationList(res);\r\n    }\r\n\r\n    getLocationlist();\r\n  })\r\n\r\n  const getLocation = async () => {\r\n    const res = await fetch(`${APIEndpoint}/wilayah.json`);\r\n    const data = await res.json();\r\n\r\n    return data;\r\n  }\r\n\r\n  const getWeather = async (id) => {\r\n    const res = await fetch(`${APIEndpoint}/${id}.json`);\r\n    const data = await res.json();\r\n\r\n    setWeatherList(data);\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div className='background-banner'></div>\r\n      <div className='container'>\r\n        <SearchBar locations={locationList.length > 0 && locationList} onLocationChange={getWeather} />\r\n        <center className='main-content'>\r\n          {weather.length > 0 ? (\r\n            <>\r\n              <h3>Tiap Jam</h3>\r\n              <div className='horizontal-scroller'>\r\n                <WeatherCard weather={weather} />\r\n              </div>\r\n            </>\r\n          ) : (<h3>Halo! Untuk memulai, silakan masukkan lokasi Anda.</h3>)}\r\n        </center>\r\n      </div>\r\n      <footer className='footer'>\r\n        <p>\r\n          Gambar oleh <a href=\"https://www.unsplash.com/\" target='_blank' rel='noreferrer'>Unsplash</a> | API oleh <a href=\"https://github.com/ibnux\" target='_blank' rel='noreferrer'>ibnux</a> | Data oleh <a href=\"https://data.bmkg.go.id/\" target='_blank' rel='noreferrer'>Badan Meteorologi, Klimatologi dan Geofisika (BMKG)</a>\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}